
services:
  app:
    env_file:
      - .env
    environment:
      - USE_DOCKER=True
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - develop-net
    volumes:
      - static_volume:/app/static
      - ./app:/app

  django:
    extends:
      service: app
    expose:
      - "8000"
    command: >
      bash -c "python manage.py collectstatic --noinput
      && python manage.py makemigrations store catalog account order chat
      && python manage.py migrate
      && python manage.py ensure_adminuser --no-input
      && gunicorn --bind 0.0.0.0:8000 config.wsgi"

  daphne:
    extends:
      service: app
    command: >
      bash -c "daphne -p 9001 config.asgi:application"

  nginx:
    image: nginx:1.27.0
    container_name: nginx
    depends_on:
      - django
      - daphne
    networks:
      - develop-net
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/static
    restart: always

  celery:
    extends:
      service: app
    command: >
      bash -c "celery -A config worker -l info"
    depends_on:
      - redis
      - django

  redis:
    image: redis:7.4.0
    container_name: redis
    networks:
      - develop-net
    expose:
      - "6379"

volumes:
  static_volume:

networks:
  develop-net:
    driver: bridge
